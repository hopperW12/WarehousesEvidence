// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehousesEvidence.Data;

#nullable disable

namespace WarehousesEvidence.Data.Migrations
{
    [DbContext(typeof(DataDbContext))]
    [Migration("20240927074518_AddEntities")]
    partial class AddEntities
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("PersonId");

                    b.ToTable("Persons", (string)null);

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            BirthDate = new DateTime(1990, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "john.doe@gmail.com",
                            FirstName = "John",
                            LastName = "Doe",
                            PhoneNumber = 1434567890
                        },
                        new
                        {
                            PersonId = 2,
                            BirthDate = new DateTime(1995, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jane.doe@gmail.com",
                            FirstName = "Jane",
                            LastName = "Doe",
                            PhoneNumber = 1233567890
                        },
                        new
                        {
                            PersonId = 3,
                            BirthDate = new DateTime(1985, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "alice.smith@gmail.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            PhoneNumber = 1234568890
                        });
                });

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Name = "Steel"
                        },
                        new
                        {
                            ProductId = 2,
                            Name = "Wood Plank"
                        },
                        new
                        {
                            ProductId = 3,
                            Name = "Stone"
                        },
                        new
                        {
                            ProductId = 4,
                            Name = "Brick"
                        },
                        new
                        {
                            ProductId = 5,
                            Name = "Cement"
                        });
                });

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.Warehouse", b =>
                {
                    b.Property<int>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses", (string)null);

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            Address = "18455 S Figueroa St",
                            Name = "Building - Warehouse"
                        },
                        new
                        {
                            WarehouseId = 2,
                            Address = "Gardena CA 90248-4503",
                            Name = "Main Warehouse"
                        });
                });

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.WarehouseProduct", b =>
                {
                    b.Property<int>("WarehouseId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.HasKey("WarehouseId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("WarehouseProducts", (string)null);

                    b.HasData(
                        new
                        {
                            WarehouseId = 1,
                            ProductId = 1,
                            Quantity = 52
                        },
                        new
                        {
                            WarehouseId = 1,
                            ProductId = 2,
                            Quantity = 12
                        },
                        new
                        {
                            WarehouseId = 1,
                            ProductId = 3,
                            Quantity = 5
                        },
                        new
                        {
                            WarehouseId = 2,
                            ProductId = 4,
                            Quantity = 8
                        },
                        new
                        {
                            WarehouseId = 2,
                            ProductId = 5,
                            Quantity = 3
                        });
                });

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.WarehouseProduct", b =>
                {
                    b.HasOne("WarehousesEvidence.Core.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehousesEvidence.Core.Entities.Warehouse", "Warehouse")
                        .WithMany("Products")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Warehouse");
                });

            modelBuilder.Entity("WarehousesEvidence.Core.Entities.Warehouse", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
